#user root owner;
user root;

worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;


events {
    #epoll是多路复用IO(I/O Multiplexing)中的一种方式,
    #仅用于linux2.6以上内核,可以大大提高nginx的性能
    use   epoll;

    #单个后台worker process进程的最大并发链接数
    worker_connections  1024;

    # 并发总数是 worker_processes 和 worker_connections 的乘积
    # 即 max_clients = worker_processes * worker_connections
    # 在设置了反向代理的情况下，max_clients = worker_processes * worker_connections / 4  为什么
    # 为什么上面反向代理要除以4，应该说是一个经验值
    # 根据以上条件，正常情况下的Nginx Server可以应付的最大连接数为：4 * 8000 = 32000
    # worker_connections 值的设置跟物理内存大小有关
    # 因为并发受IO约束，max_clients的值须小于系统可以打开的最大文件数
    # 而系统可以打开的最大文件数和内存大小成正比，一般1GB42.194.251.114内存的机器上可以打开的文件数大约是10万左右
    # 我们来看看360M内存的VPS可以打开的文件句柄数是多少：
    # $ cat /proc/sys/fs/file-max
    # 输出 34336
    # 32000 < 34336，即并发连接总数小于系统可以打开的文件句柄总数，这样就在操作系统可以承受的范围之内
    # 所以，worker_connections 的值需根据 worker_processes 进程数目和系统可以打开的最大文件总数进行适当地进行设置
    # 使得并发总数小于操作系统可以打开的最大文件数目
    # 其实质也就是根据主机的物理CPU和内存进行配置
    # 当然，理论上的并发总数可能会和实际有所偏差，因为主机还有其他的工作进程需要消耗系统资源。
    # ulimit -SHn 65535
}


http {
    #设定mime类型,类型由mime.type文件定义
    include       mime.types;
    default_type  application/octet-stream;
    # nginx 上传限制
    client_max_body_size 30m;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，
    #对于普通应用，必须设为 on,
    #如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，
    #以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    #tcp_nopush     on;

    #连接超时时间
    #keepalive_timeout  0;
    keepalive_timeout  65;

    #开始404配置
    proxy_intercept_errors on;      
    fastcgi_intercept_errors on;

    #开启gzip压缩
    gzip  on;
    gzip_disable "MSIE [1-6].";

    server {
        listen       80;
        listen [::]:80 ipv6only=on;
        listen 443 ssl;
        server_name  localhost;

        # 自定路径必须是绝对路径
        set $html /home/www;

        ssl_certificate   /etc/nginx/cert/zruibin.cn.pem;
        ssl_certificate_key  /etc/nginx/cert/zruibin.cn.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        if ($scheme = http) {
            rewrite ^(.*)$  https://$host$1 permanent;
        }

        #charset koi8-r;
        #access_log  logs/host.access.log  main;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';

        #默认请求
        location / {
            #root   html;
            root $html;
            index  index.html index.htm;
        }

        # location /service/ {
        #     proxy_pass http://127.0.0.1:5000; # 这里是指向 gunicorn host 的服务地址
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # }

        # location /admin/ {
        #     proxy_pass http://127.0.0.1:5000; # 这里是指向 gunicorn host 的服务地址
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # }

        error_page   500 502 503 504  /404.html;
        error_page   404 /404.html;
        location = /404.html {
            root /home/private/;
        }

    }

    server {
        listen 80;
        listen 443 ssl;
        server_name private.zruibin.cn;         #绑定域名
        #root /home/private/;                    #网站根目录，建议使用绝对路径
        #index index.php index.html index.htm;   #默认文件

        ssl_certificate   /etc/nginx/cert/private.zruibin.cn.pem;
        ssl_certificate_key  /etc/nginx/cert/private.zruibin.cn.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        if ($scheme = http) {
            rewrite ^(.*)$  https://$host$1 permanent;
        }

        location / {
            root /home/private/;                    #网站根目录，建议使用绝对路径
            index index.php index.html index.htm;   #默认文件
        }

        location /tmp/ {
            alias /home/tmp/;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /404.html;
        error_page   404 /404.html;
        location = /404.html {
            root /home/private/;
        }
    }


    server {
        listen 8001;
        server_name localhost;

        location / {
            proxy_pass http://127.0.0.1:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

}