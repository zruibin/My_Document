#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

# https://blog.csdn.net/qq_36631379/article/details/120005075
# https://blog.csdn.net/yelu_hong/article/details/83856306

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

sum=0
lint=./lint/lint.py
# cpplint=./cpplint.py
# filters='-whitespace/line_length,-build/include'
# headers='h,hpp,c,cc,cpp'

#| grep -E '\.[ch](pp|c)?$' | awk '{print $2}'
        
# for cpp
for file in $(git diff-index --name-status $against --);  do
		if [ -f "$file" ]; then
		 	# echo "$file found."
			# $cpplint --filter=$filters --headers=$headers $file
			$lint $file
			count=$? # $?是上一指令的返回值
    		sum=$(expr ${sum} + $count)

    		if [ $count -eq 1 ]; then
    			echo " " 
    		fi
		fi
done
    
if [ ${sum} -eq 0 ]; then
    exit 0
else
    exit 1
fi